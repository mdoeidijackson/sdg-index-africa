{"version":3,"sources":["components/SDGTile.js","components/SDGTileCollection.js","components/SDGBar.js","components/CountryIndex.js","pages/HomePage.js","components/Divider.js","models/SDG.js","models/Trend.js","components/CurrentAssessmentSection.js","components/IndicatorPerformanceSection.js","pages/CountryPage.js","components/MapLegend.js","components/MapDisplay.js","components/Map.js","components/Footer.js","models/Country.js","models/Indicator.js","helpers/loadCountries.js","App.js","serviceWorker.js","index.js"],"names":["FullSizeImage","styled","img","_templateObject","TrendSection","div","_templateObject2","props","color","SDGTile","_this$props","this","sdg","clickHandler","backgroundColor","trend","otherProps","Object","objectWithoutProperties","sdgTrend","react_default","a","createElement","GridListTile","assign","cols","ButtonBase","onClick","data-focus","style","border","src","concat","alt","className","icon","PureComponent","SDGTileCollection","resetMapFocus","setMapFocus","columnsMD","columnsSM","columnsXS","width","_this$props$exclude","exclude","columns","goals1to17","toConsumableArray","Array","keys","map","goal","components_SDGTile","key","sdgTile","tiles","sort","reverse","forEach","tileToExclude","splice","react","GridList","spacing","cellHeight","withWidth","Bar","SDGBar_templateObject","Block","SDGBar_templateObject2","SDGBar","sdgs","showTooltip","hideTooltip","blocks","score","blockWidth","Number","number","data-label","getLabel","data-score","onMouseOver","onMouseOut","SDGIndexTable","MUIDataTable","CountryIndex_templateObject","SDGIndexTableHead","th","CountryIndex_templateObject2","CountryColumn","Link","_templateObject3","customHead","_ref","sortColumn","index","sortDirection","label","sortIndicator","ArrowUpward_default","ArrowDownward_default","SvgIcon","children","disabled","Typography","variant","fontWeight","options","download","viewColumns","print","filter","responsive","selectableRows","elevation","rowsPerPage","search","customFooter","count","page","changeRowsPerPage","changePage","CountryIndex","name","customHeadRender","customBodyRender","country","tableMeta","updateValue","to","url","components_SDGBar","rank","toString","countries","data","region","gutterBottom","Tooltip","Popper","HomePage_templateObject","HomePage","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","event","currentTarget","setState","state","tooltipShow","tooltipAnchor","tooltipScore","getAttribute","tooltipLabel","focus","_this$state","resetFocus","textDecoration","cursor","Paper","padding","position","Box","marginBottom","components_SDGTileCollection","components_CountryIndex","open","Boolean","keepMounted","anchorEl","placement","modifiers","flip","enabled","offset","paragraph","Divider","hr","Divider_templateObject","SDG_LABELS","COLOR_SCHEME","colorName","tileColor","mapColor","mapHoverColor","description","SDG","status","indicators","constructor","find","option","getColorOption","mapStrokeColor","ICONS","↑","➚","CallMade_default","→","ArrowForward_default","↓",".","Remove_default","","COLOR_NAMES","Trend","arrow","colorFromColorName","trendColorName","colorScheme","TRENDS","Color","span","CurrentAssessmentSection_templateObject","hex","TrendIcon","CurrentAssessmentSection_templateObject2","Description","CurrentAssessmentSection_templateObject3","CurrentAssessmentSection","ratings","component","trends","components_Divider","Grid","container","item","xs","md","getSDG","tileStatusColor","Card","display","marginRight","CardContent","ColumnWithBGColor","IndicatorPerformanceSection_templateObject","background","ColumnWithoutPadding","IndicatorPerformanceSection_templateObject2","ListWithSeparators","List","IndicatorPerformanceSection_templateObject3","_templateObject4","_templateObject5","_templateObject6","IndicatorPerformanceSection","indicator","ListItem","ListItemText","primary","ListItemSecondaryAction","roundedScore","IndicatorPerformanceSection_Color","statusColor","IndicatorPerformanceSection_Trend","lg","IndicatorPerformanceSection_FullSizeImage","align","disableTypography","secondary","CountryPage","countrySlug","match","params","slug","paddingTop","top","zIndex","react_router_dom","float","components_CurrentAssessmentSection","components_IndicatorPerformanceSection","Component","Legend","MapLegend_templateObject","MapLegend_templateObject2","fill","stroke","MapLegend_templateObject3","MapLegend","title","items","MapLegend_Color","MapLegend_Description","MapSvg","SvgLoader","MapDisplay_templateObject","templateLiteral","overallScheme","focusScheme","MapDisplay","colorSchemeOverallScore","threshold","mapStatusColorName","openCityDashboard","proxies","react_svgmt","toLowerCase","selector","getCountryScore","getScoreLabel","data-country","data-url","data-color","getCountryColorName","onMouseMove","path","colorSchemeGoals","Map_templateObject","Map","history","push","clientY","clientX","clientWidth","clientHeight","getBoundingClientRect","height","bottom","left","right","tooltipCountry","Container","Hidden","smDown","components_MapLegend","components_MapDisplay","Map_Tooltip","transition","withRouter","FooterContainer","Footer_templateObject","Footer","sm","href","target","rel","maxHeight","Country","SortableRank","replace","otherCountry","localeCompare","isNaN","otherRank","Indicator","length","toFixed","numberOrNull","decimals","arguments","undefined","initCountry","countryData","x","sdgNumber","sdgData","RegExp","test","_key$split$filter","split","_key$split$filter2","slicedToArray","indicatorNumber","startsWith","initSDG","loadCountries","callback","fetch","then","response","Error","json","cities","city","SiteHeader","AppBar","App_templateObject","GlobalStyle","createGlobalStyle","App_templateObject2","ToolbarButton","App_templateObject3","App","newFocus","_this2","_this3","basename","Toolbar","xsDown","flexGrow","components_Map","react_router","exact","render","pages_HomePage","pages_CountryPage","components_Footer","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d2c4968e.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport ButtonBase from '@material-ui/core/ButtonBase'\nimport GridListTile from '@material-ui/core/GridListTile'\nimport styled from 'styled-components'\n\nconst FullSizeImage = styled.img`\n  && {\n    left: 0;\n    position: default;\n    transform: none;\n    max-width: 100%;\n    width: 300px;\n  }\n`\n\nconst TrendSection = styled.div`\n  color: ${props => props.color};\n  margin: 20px;\n  transform: scale(2);\n`\n\nclass SDGTile extends PureComponent {\n  render() {\n    const { sdg, clickHandler, backgroundColor, trend, ...otherProps } = this.props\n\n    const sdgTrend = (trend ? trend(sdg) : null)\n\n    return(\n      <GridListTile cols={1} {...otherProps}>\n        <ButtonBase\n          onClick={clickHandler}\n          data-focus={sdg}\n          style={{border: '1px solid #eee'}}>\n          <FullSizeImage\n            src={`/images/sdg${sdg}.png`}\n            alt={`SDG ${sdg} icon`}\n            style={{backgroundColor: backgroundColor ? backgroundColor(sdg) : ''}}\n            className={`bg sdg${sdg}`} />\n          {sdgTrend ? (\n            <TrendSection color={sdgTrend.color}>\n              {sdgTrend.icon}\n            </TrendSection>\n          ) : null}\n        </ButtonBase>\n      </GridListTile>\n    );\n  }\n}\n\nexport default SDGTile\n","import React, { Fragment, PureComponent } from 'react'\nimport GridList from '@material-ui/core/GridList'\nimport withWidth from '@material-ui/core/withWidth'\n\nimport SDGTile from '../components/SDGTile'\n\n\nclass SDGTileCollection extends PureComponent {\n  render() {\n    const { resetMapFocus, setMapFocus,\n            columnsMD, columnsSM, columnsXS,\n            width, exclude = [], trend, backgroundColor } = this.props\n\n    let columns = null\n\n    switch(width) {\n      case 'xs':\n        columns = columnsXS\n        break\n      case 'sm':\n        columns = columnsSM\n        break\n      case 'md':\n      case 'lg':\n      case 'xl':\n      default:\n        columns = columnsMD\n        break;\n    }\n\n    const goals1to17  = [...Array(17).keys()].map(goal => {\n      return <SDGTile clickHandler={setMapFocus}\n                      key={goal+1}\n                      sdg={goal+1}\n                      {...{backgroundColor, trend}} />\n      })\n    const sdgTile     = <SDGTile clickHandler={resetMapFocus} key={18} sdg='18' />\n\n    let tiles = goals1to17.concat([sdgTile])\n\n    // remove unwanted tiles, such as goals 14 and 17\n    // must be reverse-sorted so that we remove the biggest index first\n    exclude.sort().reverse().forEach(tileToExclude => {\n      tiles.splice(tileToExclude - 1, 1)\n    })\n\n    return(\n      <Fragment>\n        <GridList cols={columns} spacing={8} cellHeight='auto'>\n          {tiles}\n        </GridList>\n      </Fragment>\n    );\n  }\n}\n\nexport default withWidth()(SDGTileCollection)\n","import React, { PureComponent } from 'react'\nimport styled from 'styled-components'\n\nconst Bar = styled.div`\n  width: 400px;\n  background: #eee;\n  min-height: 24px;\n`\n\nconst Block = styled.div`\n  display: inline-block;\n  background: black;\n  border-right: 1px solid #fff;\n  min-height: 24px;\n  vertical-align: bottom;\n`\n\nclass SDGBar extends PureComponent {\n  render() {\n    const { sdgs, showTooltip, hideTooltip } = this.props\n\n    const NUMBER_OF_GOALS = 15\n\n    const blocks = sdgs.map((sdg) => {\n      if(sdg.score === null)\n        return null\n\n      // width of block: max-width * score-in-percent\n      // max width of block: 100/num-goals\n      const blockWidth = 100/NUMBER_OF_GOALS * (Number(sdg.score)/100.0)\n      return (\n        <Block\n          key={sdg.number}\n          className={`sdg bg sdg${sdg.number}`}\n          data-label={sdg.getLabel()}\n          data-score={`${sdg.score}%`}\n          style={{width: `calc(${blockWidth}% - 1px`}}\n          onMouseOver={showTooltip}\n          onMouseOut={hideTooltip} />\n      )\n    })\n\n    return(\n      <Bar>\n        {blocks}\n      </Bar>\n    );\n  }\n}\n\nexport default SDGBar\n","import React, { PureComponent } from 'react'\nimport { Link } from \"react-router-dom\"\nimport ButtonBase from '@material-ui/core/ButtonBase'\nimport Typography from '@material-ui/core/Typography'\nimport MUIDataTable from \"mui-datatables\"\nimport styled from 'styled-components'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\nimport SvgIcon from '@material-ui/core/SvgIcon'\n\nimport SDGBar from './SDGBar'\n\nconst SDGIndexTable = styled(MUIDataTable)`\n  && {\n    overflow-x: auto;\n  }\n\n  .MuiTableCell-head {\n    color: black;\n    font-size: 1rem;\n    border-top: 1px solid rgba(0,0,0,0.12);\n\n    &:after{\n      content:'';\n      position:absolute;\n      left: 0;\n      bottom: 0;\n      width:100%;\n      border-bottom: 2px solid rgba(0,0,0,0.12);\n    }\n  }\n\n  .MuiTableCell-body {\n    color: #6c757d;\n    font-size: 1rem;\n  }\n`\n\nconst SDGIndexTableHead = styled.th`\n  && {\n    border-top: 1px solid rgba(0,0,0,0.12);\n    top: 0px;\n    left: 0px;\n    z-index: 100;\n    position: sticky;\n    background-color: #fff;\n    padding: 0;\n\n    &:after{\n      content:'';\n      position:absolute;\n      left: 0;\n      bottom: 0;\n      width:100%;\n      border-bottom: 2px solid rgba(0,0,0,0.12);\n    }\n  }\n\n  button {\n    width: 100%;\n    padding: 20px 16px 20px 16px;\n    justify-content: left;\n    font-weight: bold;\n    line-height: 24px;\n\n    &:hover {\n      background: #eee;\n    }\n  }\n`\n\nconst CountryColumn = styled(Link)`\n  font-weight: 500;\n  color: black;\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nconst customHead = ({index, sort, sortDirection, label}, sortColumn) => {\n  const sortIndicator = (() => {\n    switch(sortDirection) {\n      case 'asc': return <ArrowUpwardIcon />\n      case 'desc': return <ArrowDownwardIcon />\n      default: return <SvgIcon children={<div/>}/>\n    }\n  })();\n\n  return (\n    <SDGIndexTableHead key={index}>\n      <ButtonBase disabled={!sort} onClick={() => sortColumn(index)}>\n        <Typography variant='body1' style={{fontWeight: 500}}>\n          {label}\n        </Typography>\n        {sortIndicator}\n      </ButtonBase>\n    </SDGIndexTableHead>\n  );\n}\n\nconst options = {\n  download: false,\n  viewColumns: false,\n  print: false,\n  filter: false,\n  responsive: 'none',\n  selectableRows: 'none',\n  elevation: 0,\n  rowsPerPage: 500,\n  search: false,\n  sort: true,\n  customFooter: (count, page, rowsPerPage, changeRowsPerPage, changePage) => {\n    return <tbody></tbody>\n  }\n};\n\nclass CountryIndex extends PureComponent {\n  render() {\n    const { showTooltip, hideTooltip } = this.props;\n\n    const columns = [\n      {\n        name: \"Country\",\n        options: {\n          sort: true,\n          sortDirection: null,\n          customHeadRender: customHead,\n          customBodyRender: (country, tableMeta, updateValue) => {\n            return <CountryColumn to={country.url()}>{country.name}</CountryColumn>\n          },\n        },\n      },\n      {\n        name: \"Region\",\n        options: {\n          sort: true,\n          sortDirection: null,\n          customHeadRender: customHead\n        },\n      },\n      {\n        name: \"SDGs\",\n        options: {\n          sort: false,\n          customBodyRender: (sdgs, tableMeta, updateValue) => {\n            return <SDGBar sdgs={sdgs}\n                           showTooltip={showTooltip}\n                           hideTooltip={hideTooltip}/>\n          },\n          customHeadRender: customHead\n        },\n      },\n      {\n        name: \"Rank\",\n        options: {\n          sort: true,\n          sortDirection: 'asc',\n          customHeadRender: customHead,\n          customBodyRender: (rank, tableMeta, updateValue) => rank.toString(),\n        },\n      },\n      {\n        name: \"Score\",\n        options: {\n          sort: false,\n          customHeadRender: customHead\n        },\n      },\n    ]\n\n    const { countries } = this.props\n    const data = countries && countries.map(country => {\n      return [country, country.region, country.sdgs, country.rank, country.score]\n    })\n\n    return (\n      <div>\n        <Typography variant=\"h5\" gutterBottom>\n          Africa SDG Index 2019\n        </Typography>\n        <Typography variant='body1' style={{color: '#6c757d'}} gutterBottom>\n          Select a country to see its full profile.\n        </Typography>\n\n        <SDGIndexTable\n          data={data}\n          columns={columns}\n          options={options}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CountryIndex\n","import React, { PureComponent } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Popper from '@material-ui/core/Popper'\nimport Box from '@material-ui/core/Box';\nimport styled from 'styled-components'\n\nimport SDGTileCollection from '../components/SDGTileCollection'\nimport CountryIndex from '../components/CountryIndex'\n\nconst Tooltip = styled(Popper)`\n  font-size: .8rem;\n  padding: 12px;\n  background: rgba(0, 0, 0, 0.8);\n  color: #fff;\n  border-radius: 2px;\n  position: absolute;\n  pointer-events: none;\n  z-index: 1000;\n  transition: all .2s;\n\n  &:after {\n    box-sizing: border-box;\n    display: inline;\n    font-size: 10px;\n    width: 100%;\n    line-height: 1;\n    content: \"▼\";\n    color: rgba(0, 0, 0, 0.8);\n    position: absolute;\n    text-align: center;\n    left: 0;\n    bottom: -7px;\n  }\n\n  &.hidden {\n    visibility: hidden;\n  }\n`\n\nclass HomePage extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tooltipShow: false,\n      tooltipAnchor: null,\n      tooltipScore: null,\n      tooltipLabel: null\n    };\n  }\n\n  showTooltip = event => {\n    const { currentTarget } = event;\n\n    this.setState(state => ({\n      tooltipShow: true,\n      tooltipAnchor: currentTarget,\n      tooltipScore: currentTarget.getAttribute('data-score'),\n      tooltipLabel: currentTarget.getAttribute('data-label')\n    }));\n  };\n\n  hideTooltip = event => {\n    this.setState(state => ({\n      tooltipShow: false\n    }));\n  };\n\n  render() {\n    const { focus, resetMapFocus, setMapFocus, countries } = this.props\n\n    const { tooltipShow, tooltipAnchor, tooltipLabel, tooltipScore } = this.state\n\n    const resetFocus =\n      <span>\n        &nbsp;\n        <span onClick={resetMapFocus} style={{color: '#0000EE', textDecoration: 'underline', cursor: 'pointer'}}>\n          or display the overall scores\n        </span>\n      </span>\n\n    return (\n      <Paper style={{padding: 24, position: 'relative'}}>\n        <Box marginBottom={5}>\n          <Typography variant=\"h5\" gutterBottom>\n            Sustainable Development Goals\n          </Typography>\n          <Typography variant='body1' style={{color: '#6c757d'}} gutterBottom>\n            Select one of the SDGs to see it on the map\n            {focus ? resetFocus : null}\n            .\n          </Typography>\n          <SDGTileCollection\n            columnsMD={9}\n            columnsSM={6}\n            columnsXS={2}\n            {...{setMapFocus, resetMapFocus}} />\n        </Box>\n\n        <CountryIndex\n          countries={countries}\n          showTooltip={this.showTooltip}\n          hideTooltip={this.hideTooltip} />\n        <Tooltip\n          className={tooltipShow ? 'show' : 'hidden'}\n          open={Boolean(tooltipAnchor)}\n          keepMounted={true}\n          anchorEl={tooltipAnchor}\n          placement=\"top\"\n          modifiers={{\n            flip: {\n              // our arrow is always pointing down, so do not flip tooltip\n              enabled: false\n            },\n            offset: {\n              enabled: true,\n              offset: '0, 7px'\n            }\n          }}>\n          <Typography variant='body2' paragraph={false}>\n            <span style={{fontWeight: 500}}>\n              {tooltipLabel}\n            </span>: {tooltipScore}\n          </Typography>\n        </Tooltip>\n      </Paper>\n    );\n  }\n}\n\nexport default HomePage\n","import styled from 'styled-components'\n\nconst Divider = styled.hr`\n  border: 0;\n  border-bottom: 1px solid #e6e6e6;\n`\n\nexport default Divider\n","const SDG_LABELS = [\n  \"No poverty\",\n  \"Zero hunger\",\n  \"Good health and well-being\",\n  \"Quality education\",\n  \"Gender equality\",\n  \"Clean water and sanitation\",\n  \"Affordable and clean energy\",\n  \"Decent work and economic growth\",\n  \"Industry, innovation and infrastructure\",\n  \"Reduced inequalities\",\n  \"Sustainable cities and communities\",\n  \"Responsible consumption and production\",\n  \"Climate action\",\n  \"Life below water\",\n  \"Life on land\",\n  \"Peace, justice and strong institutions\",\n  \"Partnerships for the goals\"\n]\n\nconst COLOR_SCHEME = [{\n    colorName: 'green',\n    tileColor: '#1c8634',\n    mapColor: '#2a9e2a',\n    mapHoverColor: '#1a6c1a',\n    description: 'SDG achieved'\n  },{\n    colorName: 'yellow',\n    tileColor: '#f2bc3c',\n    mapColor: '#ffcf00',\n    mapHoverColor: '#e3b800',\n    description: 'Challenges remain'\n  },{\n    colorName: 'orange',\n    tileColor: '#e9713a',\n    mapColor: '#ff7500',\n    mapHoverColor: '#c35900',\n    description: 'Significant challenges remain'\n  },{\n    colorName: 'red',\n    tileColor: '#dc3545',\n    mapColor: '#c90000',\n    mapHoverColor: '#710000',\n    description: 'Major challenges remain'\n  },{\n    colorName: 'gray',\n    tileColor: '#5a5a5a',\n    mapColor: '#d8d8d8',\n    mapHoverColor: '#979797',\n    description: 'Significant data gaps'\n  }\n]\n\n\nclass SDG {\n  constructor({number, score, status, trend, indicators}) {\n    this.number     = number\n    this.score      = score\n    this.status     = status\n    this.trend      = trend\n    this.indicators = indicators || []\n  }\n\n  static colorScheme() {\n    return COLOR_SCHEME\n  }\n\n  // returns the label for the given SDG number, such as 'No poverty' for 1\n  static getLabel(number) {\n    return SDG_LABELS[Number(number) - 1]\n  }\n\n  getLabel() {\n    return this.constructor.getLabel(this.number)\n  }\n\n  // return the color option for this SDG\n  getColorOption() {\n    return COLOR_SCHEME.find(option => option.colorName === this.status)\n  }\n\n  // return the name for the goal's status color\n  mapStatusColorName() {\n    return this.getColorOption().colorName\n  }\n\n  // return the light color for the goal's status\n  mapStatusColor() {\n    return this.getColorOption().mapColor\n  }\n\n  // return the stroke color for the goal's statu\n  mapStatusStrokeColor() {\n    return this.getColorOption().mapStrokeColor\n  }\n\n  // return the dark color for the goal's status\n  tileStatusColor() {\n    return this.getColorOption().tileColor\n  }\n}\n\nexport default SDG\n","import React from 'react'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\nimport CallMadeIcon from '@material-ui/icons/CallMade'\nimport RemoveIcon from '@material-ui/icons/Remove'\n\nimport SDG from './SDG'\n\nconst ICONS = {\n  '↑': <ArrowUpwardIcon/>,\n  '➚': <CallMadeIcon/>,\n  '→': <ArrowForwardIcon/>,\n  '↓': <ArrowDownwardIcon/>,\n  '.': <RemoveIcon/>,\n  '':  <RemoveIcon/>\n}\n\nconst COLOR_NAMES = {\n  '↑': 'green',\n  '➚': 'yellow',\n  '→': 'orange',\n  '↓': 'red',\n  '.': 'gray',\n  '':  'gray'\n}\n\nclass Trend {\n  constructor(arrow) {\n    this.arrow = arrow\n  }\n\n  static get options() {\n    return TRENDS\n  }\n\n  static colorFromColorName(colorName) {\n    return SDG.colorScheme()\n              .find(option => option.colorName === colorName)\n              .tileColor\n  }\n\n  // return a color for the indicator's status\n  get icon() {\n    return ICONS[this.arrow]\n  }\n\n  get trendColorName() {\n    return COLOR_NAMES[this.arrow]\n  }\n\n  // return a color for the indicator's trend\n  get color() {\n    return Trend.colorFromColorName(this.trendColorName)\n  }\n}\n\nconst TRENDS = [{\n    name: '↑',\n    icon: ICONS['↑'],\n    description: 'On track or maintaining SDG achievement',\n    colorName: COLOR_NAMES['↑'],\n    color: Trend.colorFromColorName(COLOR_NAMES['↑'])\n  },{\n    name: '➚',\n    icon: ICONS['➚'],\n    description: 'Moderately improving',\n    colorName: COLOR_NAMES['➚'],\n    color: Trend.colorFromColorName(COLOR_NAMES['➚'])\n  },{\n    name: '→',\n    icon: ICONS['→'],\n    description: 'Stagnating',\n    colorName: COLOR_NAMES['→'],\n    color: Trend.colorFromColorName(COLOR_NAMES['→'])\n  },{\n    name: '↓',\n    icon: ICONS['↓'],\n    description: 'Decreasing',\n    colorName: COLOR_NAMES['↓'],\n    color: Trend.colorFromColorName(COLOR_NAMES['↓'])\n  },{\n    name: '.',\n    icon: ICONS['.'],\n    description: 'Information unavailable',\n    colorName: COLOR_NAMES['.'],\n    color: Trend.colorFromColorName(COLOR_NAMES['.'])\n  }]\n\nexport default Trend\n","import React, { PureComponent } from 'react'\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\n\nimport SDGTileCollection from './SDGTileCollection'\nimport Divider from './Divider'\nimport SDG from '../models/SDG'\nimport Trend from '../models/Trend'\n\nconst Color = styled.span`\n  background-color: ${props => props.hex};\n  width: 10px;\n  height: 10px;\n  display: inline-block;\n  border-radius: 100%;\n  border: 0;\n  margin-right: 8px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  vertical-align: middle;\n`\n\nconst TrendIcon = styled.span`\n  color: ${props => props.color};\n  display: inline-block;\n  vertical-align: middle;\n\n  &&, svg {\n    height: 1rem;\n  }\n`\n\nconst Description = styled(Typography)`\n  && {\n    font-size: .8rem;\n    color: rgb(108, 117, 125);\n  }\n`\n\nclass CurrentAssessmentSection extends PureComponent {\n  render() {\n    const { country, setMapFocus, resetMapFocus } = this.props\n\n    const ratings = SDG.colorScheme().map(option => {\n      return (\n        <div key={option.colorName}>\n          <Color hex={option.tileColor} />\n          <Description variant='body1' component='span'>\n            {option.description}\n          </Description>\n        </div>\n      )\n    })\n\n    const trends = Trend.options.map(option => {\n      return (\n        <div key={option.name}>\n          <TrendIcon color={option.color}>\n            {option.icon}\n          </TrendIcon>\n          <Description variant='body1' component='span'>\n            {option.description}\n          </Description>\n        </div>\n      )\n    })\n\n    return(\n      <Box marginBottom={3}>\n        <Typography variant=\"h5\" gutterBottom>\n          Current Assessment – SDG Dashboard\n        </Typography>\n        <Divider />\n        <Box marginBottom={1}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={12}>\n              <SDGTileCollection\n                columnsMD={6}\n                columnsSM={4}\n                columnsXS={2}\n                backgroundColor={(sdg) => {\n                  return country && country.getSDG(sdg).tileStatusColor()\n                }}\n                trend={(sdg) => {\n                  return country && country.getSDG(sdg).trend\n                }}\n                exclude={[18]}\n                {...{setMapFocus, resetMapFocus}} />\n            </Grid>\n            <Grid item xs={12} md={12}>\n              <Card style={{display: 'inline-block', marginRight: '8px'}}>\n                <CardContent>\n                  <Typography variant='subtitle1'>\n                    Rating\n                  </Typography>\n                  {ratings}\n                </CardContent>\n              </Card>\n              <Card style={{display: 'inline-block'}}>\n                <CardContent>\n                  <Typography variant='subtitle1'>\n                    Trend\n                  </Typography>\n                  {trends}\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default CurrentAssessmentSection\n","import React, { PureComponent } from 'react'\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\n\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\n\nimport Divider from './Divider'\n\nconst ColumnWithBGColor = styled(Grid)`\n  background: ${props => props.background};\n  color: white;\n`\n\nconst ColumnWithoutPadding = styled(Grid)`\n  @media (min-width: 960px) {\n    padding-left: 0 !important;\n  }\n`\n\nconst ListWithSeparators = styled(List)`\n  li:not(:last-child) {\n    border-bottom: 1px solid #dbdbdb;\n  }\n\n  && .MuiListItem-secondaryAction {\n    padding-right: 120px;\n  }\n`\n\nconst Color = styled.span`\n  background-color: ${props => props.hex};\n  width: 20px;\n  height: 20px;\n  display: inline-block;\n  border-radius: 100%;\n  border: 0;\n  margin-left: 8px;\n  vertical-align: middle;\n`\n\nconst Trend = styled.span`\n  color: ${props => props.color};\n  display: inline-block;\n  border: 0;\n  margin-left: 4px;\n\n  svg {\n    vertical-align: middle;\n  }\n`\n\nconst FullSizeImage = styled.img`\n  && {\n    left: 0;\n    position: default;\n    transform: none;\n    max-width: 100%;\n    display: block;\n    margin: auto;\n  }\n`\n\nclass IndicatorPerformanceSection extends PureComponent {\n  render() {\n    const { country, focus, display } = this.props\n\n    if(!display || !country)\n      return null;\n\n    const sdg = country.getSDG(focus)\n    const { score } = sdg\n\n    const indicators = sdg.indicators.map(indicator => {\n      const { label, trend } = indicator\n\n      return (\n        <ListItem key={label}>\n          <ListItemText primary={label} />\n          <ListItemSecondaryAction>\n            <Typography variant='body1' display='inline' style={{color: '#6c757d'}}>\n              {indicator.roundedScore()}\n            </Typography>\n            <Color hex={indicator.statusColor()} />\n            <Trend color={trend.color}>\n              {trend.icon}\n            </Trend>\n          </ListItemSecondaryAction>\n        </ListItem>\n      )\n    })\n\n    return(\n      <Box marginBottom={2}>\n        <Typography variant=\"h5\" gutterBottom>\n          Performance by indicator\n        </Typography>\n        <Divider />\n        <Card>\n          <CardContent style={{padding: 0}}>\n            <Grid container spacing={3}>\n              <ColumnWithBGColor\n                item xs={12} md={3} lg={2}\n                background={sdg.tileStatusColor()}>\n                <FullSizeImage\n                  src={`/images/sdg${focus}.png`}\n                  alt={`SDG ${focus} icon`} />\n                <Typography align='center' variant='body1'>\n                  Score\n                </Typography>\n                <Typography align='center' variant='h4' gutterBottom>\n                  {score}\n                </Typography>\n              </ColumnWithBGColor>\n              <ColumnWithoutPadding item xs={12} md={9} lg={10}>\n                <ListWithSeparators component=\"nav\" style={{padding: 0}}>\n                  <ListItem key='header'>\n                    <ListItemText\n                      disableTypography\n                      primary={\n                        <Typography variant='h6' style={{fontWeight: '400'}}>\n                          {sdg.getLabel()}\n                        </Typography>\n                      }\n                      secondary={\n                        <Typography variant='body1' style={{color: '#6c757d'}}>\n                          {score}\n                        </Typography>\n                      }>\n                    </ListItemText>\n                  </ListItem>\n                  {indicators}\n                </ListWithSeparators>\n              </ColumnWithoutPadding>\n            </Grid>\n          </CardContent>\n        </Card>\n      </Box>\n    );\n  }\n}\n\nexport default IndicatorPerformanceSection\n","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\nimport Divider from '../components/Divider'\nimport CurrentAssessmentSection from '../components/CurrentAssessmentSection'\nimport IndicatorPerformanceSection from '../components/IndicatorPerformanceSection'\n\nclass CountryPage extends Component {\n  render() {\n    const countrySlug = this.props.match.params.country\n    const { focus, countries, setMapFocus, resetMapFocus } = this.props\n\n    const country = countries.find(country => country.slug() === countrySlug.toString())\n\n    const { name, region } = country || {}\n\n    return (\n      <Paper style={{padding: 24, paddingTop: 16, position: 'relative'}}>\n        <Box marginBottom={2} paddingTop={1} style={{position: 'sticky', top: 0, background: 'white', zIndex: 100}}>\n          <Link to='/' style={{float: 'right'}}>\n            <Typography variant='body2'>\n              Back to countries list\n            </Typography>\n          </Link>\n          <Typography variant=\"h3\">\n            {name}\n          </Typography>\n          <Typography variant=\"h5\" gutterBottom style={{color: '#6c757d'}}>\n            {region}\n          </Typography>\n          <Divider />\n        </Box>\n\n        <CurrentAssessmentSection\n          {...{country, setMapFocus, resetMapFocus}}\n          />\n\n        <IndicatorPerformanceSection\n          display={focus ? true : false}\n          {...{country, focus}}\n          />\n\n      </Paper>\n    );\n  }\n}\n\nexport default CountryPage\n","import React, { PureComponent } from 'react'\nimport styled from 'styled-components'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\n\nconst Legend = styled(Card)`\n  && {\n    position: absolute;\n    top: 30px;\n    right: 40px;\n    vertical-align: middle;\n\n    > div {\n      padding: 16px;\n    }\n  }\n`\n\nconst Color = styled.span`\n  background-color: ${props => props.fill};\n  width: 40px;\n  height: 24px;\n  display: inline-block;\n  line-height: 1rem;\n  height: 1rem;\n  border-radius: 100%;\n  height: 15px;\n  width: 15px;\n  border: 2px solid ${props => props.stroke};\n  margin-right: 8px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  vertical-align: middle;\n`\n\nconst Description = styled(Typography)`\n  && {\n    font-size: .8rem;\n    color: rgb(108, 117, 125);\n  }\n`\n\nclass MapLegend extends PureComponent {\n  render() {\n    const { title, colorScheme } = this.props\n\n    const items = colorScheme && colorScheme.map(option => {\n      return (\n        <div key={option.colorName}>\n          <Color fill={option.mapColor} stroke={option.mapStrokeColor} />\n          <Description variant='body1' component='span'>\n            {option.description}\n          </Description>\n        </div>\n      )\n    })\n\n    return(\n      <Legend>\n        <CardContent>\n          <Typography variant='subtitle1'>\n            {title}\n          </Typography>\n          {items}\n        </CardContent>\n      </Legend>\n    );\n  }\n}\n\nexport default MapLegend\n","import React, { PureComponent } from 'react'\nimport { SvgLoader, SvgProxy } from 'react-svgmt';\nimport styled from 'styled-components'\n\nconst MapSvg = styled(SvgLoader)`\n  width: auto;\n  height: auto;\n  max-height: 70vh;\n  max-width: 100%;\n\n  padding-bottom: 20px;\n\n  // center align\n  display: block;\n  margin: auto;\n\n  .scored {\n    transition: all .3s;\n    cursor: pointer;\n\n    ${props => {\n      let templateLiteral = ``\n      props.overallScheme.forEach(option => {\n        templateLiteral += `\n          &[data-color=\"overall-${option['colorName']}\"] {\n            fill: ${option['mapColor']};\n\n            &:hover {\n              fill: ${option['mapHoverColor']};\n            }\n          }\n        `\n      })\n      return templateLiteral\n    }}\n\n    ${props => {\n      let templateLiteral = ``\n      props.focusScheme.forEach(option => {\n        templateLiteral += `\n          &[data-color=\"focus-${option['colorName']}\"] {\n            fill: ${option['mapColor']};\n\n            &:hover {\n              fill: ${option['mapHoverColor']};\n            }\n          }\n        `\n      })\n      return templateLiteral\n    }}\n  }\n`\n\nclass MapDisplay extends PureComponent {\n  getCountryScore(country, focus) {\n    if(focus === null)\n      return country.score ? country.score.toString() : \"Not scored\"\n    else {\n      const sdg = country.getSDG(focus)\n      return (sdg && sdg.score) ? sdg.score.toString() : \"Not scored\"\n    }\n  }\n\n  getCountryColorName(country, focus) {\n    if(focus === null) {\n      const score = country.score\n\n      // find the correct HEX value for the score from color scheme\n      const { colorSchemeOverallScore } = this.props\n      const option = colorSchemeOverallScore.find(option => score === option.threshold || score > option.threshold)\n\n      return `overall-${option.colorName}`\n    }\n    else {\n      const sdg = country.getSDG(focus)\n      return `focus-${sdg.mapStatusColorName()}`\n    }\n  }\n\n  getScoreLabel(country, focus) {\n    if(focus === null)\n      return 'Overall Score'\n    else {\n      const sdg = country.getSDG(focus)\n      return sdg && sdg.getLabel()\n    }\n  }\n\n  render() {\n    const { focus, countries, showTooltip, hideTooltip, openCityDashboard } = this.props\n\n    const proxies = countries && countries.map(country => {\n      return <SvgProxy  key={country.name.toLowerCase()}\n                        selector={`#${country.slug()}`}\n                        data-score={this.getCountryScore(country, focus)}\n                        data-label={this.getScoreLabel(country, focus)}\n                        data-country={country.name}\n                        data-url={country.url()}\n                        data-color={this.getCountryColorName(country, focus)}\n                        onMouseMove={showTooltip}\n                        onMouseOut={hideTooltip}\n                        onClick={openCityDashboard}\n                         />\n    })\n\n    return(\n      <MapSvg\n        path=\"/images/africa.svg\"\n        overallScheme={this.props.colorSchemeOverallScore}\n        focusScheme={this.props.colorSchemeGoals} >\n        {proxies}\n      </MapSvg>\n    );\n  }\n}\n\nexport default MapDisplay\n","import React, { PureComponent } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Container from '@material-ui/core/Container'\nimport Hidden from '@material-ui/core/Hidden'\nimport Popper from '@material-ui/core/Popper'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\n\nimport SDG from '../models/SDG'\nimport MapLegend from './MapLegend'\nimport MapDisplay from './MapDisplay'\n\nconst colorSchemeGoals = SDG.colorScheme()\n\nconst colorSchemeOverallScore = [{\n    colorName: 'darkest-blue',\n    mapColor: '#36869a',\n    mapHoverColor: '#255d6b',\n    description: '> 60',\n    threshold: 60\n  },{\n    colorName: 'dark-blue',\n    mapColor: '#35b4c9',\n    mapHoverColor: '#2f9db0',\n    description: '50 - 60',\n    threshold: 50\n  },{\n    colorName: 'blue',\n    mapColor: '#9ddde7',\n    mapHoverColor: '#6dcddd',\n    description: '40 - 50',\n    threshold: 40\n  },{\n    colorName: 'light-blue',\n    mapColor: '#bfebf5',\n    mapHoverColor: '#97cedb',\n    description: '30 - 40',\n    threshold: 30\n  },{\n    colorName: 'lightest-blue',\n    mapColor: '#ddf5fb',\n    mapHoverColor: '#b3e1ed',\n    description: '< 30',\n    threshold: 0\n  },{\n    colorName: 'gray',\n    mapColor: '#d8d8d8',\n    mapHoverColor: '#979797',\n    description: 'Not scored',\n    threshold: null\n  }\n]\n\nconst Tooltip = styled(Popper)`\n  font-size: .8rem;\n  border-radius: 5px;\n  padding: 12px;\n  background: rgba(0, 0, 0, 0.8);\n  color: #fff;\n  position: absolute;\n  pointer-events: none;\n  z-index: 1000;\n\n  .arrow:after {\n    box-sizing: border-box;\n    display: inline;\n    font-size: 10px;\n    width: 100%;\n    line-height: 1;\n    content: \"▼\";\n    color: rgba(0, 0, 0, 0.8);\n    position: absolute;\n    text-align: center;\n    left: 0;\n    bottom: -7px;\n  }\n`\n\n// Controls the map display\nclass Map extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tooltipShow: false,\n      tooltipAnchor: null,\n      tooltipScore: null,\n      tooltipLabel: null\n    };\n  }\n\n  openCityDashboard = event => {\n    const url = event.currentTarget.getAttribute('data-url')\n\n    this.props.history.push(url)\n  }\n\n  showTooltip = event => {\n    const { currentTarget, clientY, clientX } = event;\n\n    this.setState(state => ({\n      tooltipShow: true,\n      tooltipAnchor: {\n        clientWidth: 0,\n        clientHeight: 0,\n        getBoundingClientRect: () => ({\n          width: 0,\n          height: 0,\n          top: clientY,\n          bottom: clientY,\n          left: clientX,\n          right: clientX\n        }),\n      },\n      tooltipScore: currentTarget.getAttribute('data-score'),\n      tooltipCountry: currentTarget.getAttribute('data-country'),\n      tooltipLabel: currentTarget.getAttribute('data-label')\n    }));\n  };\n\n  hideTooltip = event => {\n    this.setState(state => ({\n      tooltipShow: false\n    }));\n  };\n\n  render() {\n    const { focus, countries } = this.props\n\n    const { tooltipShow, tooltipAnchor, tooltipCountry, tooltipLabel, tooltipScore } = this.state\n\n    return(\n      <Container style={{position: \"sticky\", top: 0}}>\n        { /* TODO: Display legend on mobile devices via tooltip button */ }\n        <Hidden smDown>\n          <MapLegend\n            title={focus ? SDG.getLabel(focus) : 'SDG Index Score'}\n            colorScheme={focus ? colorSchemeGoals : colorSchemeOverallScore} />\n        </Hidden>\n\n        <MapDisplay\n          openCityDashboard={this.openCityDashboard}\n          showTooltip={this.showTooltip}\n          hideTooltip={this.hideTooltip}\n          {...{countries, focus, colorSchemeGoals, colorSchemeOverallScore}}\n           />\n        <Tooltip\n          open={tooltipShow}\n          anchorEl={tooltipAnchor}\n          placement=\"top\"\n          transition\n          modifiers={{\n            flip: {\n              // our arrow is always pointing down, so do not flip tooltip\n              enabled: false\n            },\n            offset: {\n              enabled: true,\n              offset: '0, 10px'\n            }\n          }}>\n          <Typography variant='body2' style={{fontWeight: 500}}>\n            {tooltipCountry}\n          </Typography>\n          <Typography variant='body2'>\n            <span>\n              {tooltipLabel}:&nbsp;\n            </span>\n            <span style={{fontWeight: 500}}>\n              {tooltipScore}\n            </span>\n          </Typography>\n          <Hidden smDown>\n            <div className='arrow' />\n          </Hidden>\n        </Tooltip>\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(Map)\n","import React from 'react'\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\n\nconst FooterContainer = styled(Grid)`\n  p, a {\n    color: #6c757d;\n  }\n\n  a {\n    font-weight: 500;\n\n    &.logo {\n      margin: auto;\n      align-self: center;\n    }\n  }\n\n  .MuiGrid-item, .MuiBox-root {\n    width: 100%;\n    display: flex;\n  }\n`\n\nfunction Footer(props) {\n  return (\n    <FooterContainer container>\n      <Grid item md={6} sm={12}>\n        <Box padding={2}>\n          <Typography variant='body2'>\n\n            The data displayed in this dashboard is sourced from the\n            {' '}\n            <a href='http://unsdsn.org/resources/publications/2019-africa-sdg-index-and-dashboards-report/' target='_blank' rel='noopener noreferrer'>\n              2019 Africa SDG Index and Dashboards Report\n            </a>\n            . The report was prepared by the\n            {' '}\n            <a href=\"http://unsdsn.org/\" target='_blank' rel='noopener noreferrer'>\n              Sustainable Development Solutions Network\n            </a>\n            {' '}\n            and the\n            {' '}\n            <a href=\"https://sdgcafrica.org/\" target='_blank' rel='noopener noreferrer'>\n              Sustainable Development Goals Center for Africa\n            </a>\n            .\n            <br/><br/>\n            This website is an\n            {' '}\n            <a href=\"https://github.com/sdsna/sdg-index-european-cities\" target='_blank' rel='noopener noreferrer'>\n              open source passion project\n            </a>\n            {' '}\n            by\n            {' '}\n            <a href='https://twitter.com/FinnWoelm' target='_blank' rel='noopener noreferrer'>\n              @FinnWoelm\n            </a>\n            {' '}\n            in collaboration with the\n            {' '}\n            <a href='https://www.sdgindex.org/' target='_blank' rel='noopener noreferrer'>\n              SDG Index\n            </a>\n            {' '}\n            team. If you have\n            comments, suggestions, or find an inaccuracy, please\n            {' '}\n            <a href='https://twitter.com/FinnWoelm' target='_blank' rel='noopener noreferrer'>\n              send me a tweet\n            </a>\n            .\n          </Typography>\n        </Box>\n      </Grid>\n      <Grid item md={3} sm={6} xs={12}>\n        <Box padding={2}>\n          <a className='logo' href=\"http://unsdsn.org/\" target='_blank' rel='noopener noreferrer'>\n            <img src='/images/SDSN-logo.png' alt='SDSN logo' style={{maxHeight: 60}}/>\n          </a>\n        </Box>\n      </Grid>\n      <Grid item md={3} sm={6} xs={12}>\n        <Box padding={2}>\n          <a className='logo' href=\"https://sdgcafrica.org/\" target='_blank' rel='noopener noreferrer'>\n            <img src='/images/sdgca-logo.png' alt='SDGCA logo' style={{maxHeight: 60}}/>\n          </a>\n        </Box>\n      </Grid>\n    </FooterContainer>\n  )\n}\n\nexport default Footer\n","class Country {\n  constructor({name,  score, rank, sdgs, region}) {\n    this.name = name\n    this.region = region\n    this.score = score\n    this.rank = new SortableRank(rank)\n    this.sdgs = sdgs\n  }\n\n  // Return the SDG instance\n  getSDG(sdg) {\n    return this.sdgs[Number(sdg) - 1]\n  }\n\n  // Return lowercase slug without any special characters\n  // Cote d'Ivoire -> cote-divoire\n  slug() {\n    return this.name.toLowerCase().replace(/[,.']/g,'').replace(/ /g, '-')\n  }\n\n  // Return the url for the country\n  url() {\n    return `/${this.slug()}`\n  }\n\n  localeCompare(otherCountry) {\n    return this.name.localeCompare(otherCountry.name)\n  }\n}\n\n// Wrapper class for ranking that allows for custom sorting, where null\n// shows up at the end.\n// It is an easier alternative to writing a custom sort method:\n// https://github.com/gregnb/mui-datatables\nclass SortableRank {\n  constructor(rank) {\n    this.rank = rank\n  }\n\n  isNaN() {\n    return this.rank === null\n  }\n\n  toString() {\n    return this.isNaN() ? \"Not ranked\" : this.rank\n  }\n\n  // positive number = appear at end of list\n  // negative number = appear at beginning of list\n  localeCompare(otherRank) {\n    if(this.isNaN())\n      return +1\n    else if(otherRank.isNaN())\n      return -1\n    else\n      return this.rank - otherRank.rank\n  }\n}\n\nexport default Country\n","import SDG from './SDG'\n\nclass Indicator {\n  constructor({label, score, status, trend}) {\n    this.label = label\n    this.score = score\n    this.status = status || 'gray'\n    this.trend = trend\n  }\n\n  // rounds the score to two decimal places\n  roundedScore() {\n    if(this.score === null || this.score.length === 0)\n      return 'N/A'\n\n    return (+this.score.toFixed(2)).toString()\n  }\n\n  // return a color for the indicator's status\n  statusColor() {\n    return SDG.colorScheme().find(option => option.colorName === this.status).tileColor\n  }\n\n  // return a color for the indicator's trend\n  trendColor() {\n    const trendColorNames = {\n      '↑': 'green',\n      '➚': 'yellow',\n      '→': 'orange',\n      '↓': 'red',\n      '.': 'gray',\n      '':  'gray'\n    };\n\n    const trendColorName = trendColorNames[this.trend]\n\n    return SDG.colorScheme().find(option => option.colorName === trendColorName).tileColor\n  }\n}\n\nexport default Indicator\n","import Country from '../models/Country'\nimport SDG from '../models/SDG'\nimport Indicator from '../models/Indicator'\nimport Trend from '../models/Trend'\n\n// initialize an inidivdual SDG\nconst initSDG = (sdgNumber, sdgData) => {\n  const indicators =\n    Object\n      .keys(sdgData)\n      .filter(key => new RegExp(\"^\" + sdgNumber + \"\\\\.\\\\d\\\\d? [^_]{2}\").test(key))\n      .map(key => {\n        const [indicatorNumber, label] = key.split(/ (.+)/).filter(x => x)\n\n        // TODO: Refactor .findByObjectKey\n        const score  = sdgData[key]\n        const status = sdgData[Object.keys(sdgData).find(key => key.startsWith(`${indicatorNumber} __COLOR__`))]\n        const trend  = sdgData[Object.keys(sdgData).find(key => key.startsWith(`${indicatorNumber} __ARROW__`))]\n\n        return new Indicator({\n          label: label,\n          score: score,\n          status: status,\n          trend: new Trend(trend)\n        })\n      })\n\n  return new SDG({\n    number:     Number(sdgNumber),\n    score:      numberOrNull(sdgData[`Goal ${sdgNumber} Score`], 1),\n    status:     sdgData[`Goal ${sdgNumber} Dashboard`],\n    trend:      new Trend(sdgData[`arrow_goal_${sdgNumber}`]),\n    indicators: indicators\n  })\n}\n\n// return the number in the string or null if string is empty\nconst numberOrNull = (number, decimals = 0) => {\n  return (typeof number == 'number') ? Number(number).toFixed(decimals) : null\n}\n\n// initialize an individual country\nconst initCountry = countryData => {\n  // sdg scores\n  const sdgs =\n    [...Array(17).keys()].map(x => ++x).map(index => initSDG(index, countryData))\n\n  return new Country({\n    name:   countryData['country'],\n    region: countryData['AfDB_region'],\n    // use parseInt because it converts empty strings to NaN\n    rank:   numberOrNull(countryData['2019 africa Index Rank']),\n    // use parseInt because it converts empty strings to NaN\n    score:  numberOrNull(countryData['2019 africa Index Score (0-100)'], 1),\n    sdgs:   sdgs\n  })\n}\n\nconst loadCountries = callback => {\n  fetch('/data/countries.json')\n    .then(response => {\n      if (response.status >= 400) {\n        throw new Error(\"Bad response from server\");\n      }\n      return response.json();\n    })\n    .then(data => {\n      // initialize each country\n      const cities = data.map(city => initCountry(city))\n\n      // trigger callback\n      callback(cities)\n    })\n}\n\nexport default loadCountries\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport AppBar from '@material-ui/core/AppBar'\nimport ButtonBase from '@material-ui/core/ButtonBase'\nimport Container from '@material-ui/core/Container'\nimport Hidden from '@material-ui/core/Hidden'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport styled, { createGlobalStyle } from 'styled-components'\n\nimport HomePage from './pages/HomePage'\nimport CountryPage from './pages/CountryPage'\nimport Map from './components/Map'\nimport Footer from './components/Footer'\n\nimport loadCountries from './helpers/loadCountries'\n\nconst SiteHeader = styled(AppBar)`\n  && {\n    box-shadow: 0 1px 12px -3px rgba(0,0,0,.1);\n    background: white;\n  }\n\n  h6 {\n    font-weight: 400;\n  }\n\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #f8f9fa;\n    margin: 0;\n    padding: 0;\n  }\n\n  .bg {\n    &.sdg1 {\n      background: rgb(204,44,67);\n    }\n    &.sdg2 {\n      background: rgb(211, 162 ,70 );\n    }\n    &.sdg3 {\n      background: rgb(81, 148 ,71 );\n    }\n    &.sdg4 {\n      background: rgb(175, 39, 56 );\n    }\n    &.sdg5 {\n      background: rgb(211 ,69 ,58 );\n    }\n    &.sdg6 {\n      background: rgb(73, 181 ,203 ) ;\n    }\n    &.sdg7 {\n      background: rgb(238, 189, 64 ) ;\n    }\n    &.sdg8 {\n      background: rgb(141, 36, 65 );\n    }\n    &.sdg9 {\n      background: rgb(219, 104, 62 ) ;\n    }\n    &.sdg10 {\n      background: rgb(197 ,36 ,96 );\n    }\n    &.sdg11 {\n      background: rgb(232, 151, 68 ) ;\n    }\n    &.sdg12 {\n      background: rgb(177 ,134, 58 ) ;\n    }\n    &.sdg13 {\n      background: rgb(65, 119 ,68 );\n    }\n    &.sdg14 {\n      background: rgb(52, 139 ,186 );\n    }\n    &.sdg15 {\n      background: rgb(100 ,167, 74 ) ;\n    }\n    &.sdg16 {\n      background: rgb(31, 101 ,137 ) ;\n    }\n    &.sdg17 {\n      background: rgb(26, 65 ,86 );\n    }\n  }\n`\n\nconst ToolbarButton = styled(ButtonBase)`\n  && {\n    text-align: left;\n    padding: 16px;\n    display: flex;\n    align-self: stretch;\n    flex-direction: column;\n    align-items: start;\n  }\n`\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { countries: [], focus: null };\n  }\n\n  componentDidMount() {\n    loadCountries(countries => {\n      this.setState({ countries: countries })\n    })\n  }\n\n  setMapFocus = event => {\n    const { currentTarget } = event;\n    const newFocus = currentTarget.getAttribute('data-focus')\n\n    this.setState({ focus: newFocus })\n  }\n\n  resetMapFocus = event => {\n    this.setState({ focus: null })\n  }\n\n  render() {\n    const { focus, countries } = this.state\n\n    return (\n      <HashRouter basename=\"/\">\n        <SiteHeader position=\"static\" color=\"default\">\n        <Container style={{padding: 0}}>\n          <Toolbar>\n            <ToolbarButton component={Link} to=\"/\">\n              <Typography variant=\"h6\" color=\"inherit\">\n                Africa SDG Index\n              </Typography>\n              <Typography variant=\"body1\" style={{color: '#6c757d'}} gutterBottom>\n                2019 Report\n              </Typography>\n            </ToolbarButton>\n            <Hidden xsDown>\n              <div style={{flexGrow: 1}} />\n              <ToolbarButton component='a' href=\"http://unsdsn.org/\" target='_blank' rel='noopener noreferrer'>\n                <img src='/images/SDSN-logo.png' alt='SDSN logo' style={{maxHeight: 60}}/>\n              </ToolbarButton>\n              <ToolbarButton component='a' href=\"https://sdgcafrica.org/\" target='_blank' rel='noopener noreferrer'>\n                <img src='/images/sdgca-logo.png' alt='SDGCA logo' style={{maxHeight: 60}}/>\n              </ToolbarButton>\n            </Hidden>\n            </Toolbar>\n          </Container>\n        </SiteHeader>\n\n        <Map\n          focus={focus}\n          countries={countries} />\n\n        <Container style={{background: '#f8f9fa', position: 'relative'}}>\n          <Route\n            exact\n            path=\"/\"\n            render={(props) => {\n              return <HomePage\n                        {...props}\n                        focus={focus}\n                        setMapFocus={this.setMapFocus}\n                        resetMapFocus={this.resetMapFocus}\n                        countries={countries} />\n            }} />\n          <Route\n            path=\"/:country\"\n            render={(props) => {\n              return <CountryPage\n                        {...props}\n                        focus={focus}\n                        setMapFocus={this.setMapFocus}\n                        resetMapFocus={this.resetMapFocus}\n                        countries={countries} />\n            }} />\n\n            <Footer />\n        </Container>\n        <GlobalStyle />\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}